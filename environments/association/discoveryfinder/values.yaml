# Copyright (c) 2024 Robert Bosch Manufacturing Solutions GmbH
# Copyright (c) 2024 Contributors to the Eclipse Foundation
#
# See the NOTICE file(s) distributed with this work for additional
# information regarding copyright ownership.
#
# This program and the accompanying materials are made available under the
# terms of the Apache License, Version 2.0 which is available at
# https://www.apache.org/licenses/LICENSE-2.0.
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
#
# SPDX-License-Identifier: Apache-2.0
###############################################################
nameOverride:
fullnameOverride:
enablePostgres: true

discoveryfinder:
  image:
    registry: docker.io
    repository: tractusx/sldt-discovery-finder
    imagePullPolicy: IfNotPresent
  imagePullSecrets:
    - name: machineuser-pull-secret-ro
  replicaCount: 1
  containerPort: 4243
  host: semantics.int.catena-x.net
  ## If 'authentication' is set to false, no OAuth authentication is enforced
  authentication: true
  ## If initial endpoints need to be created when the application starts, enable the initialEndpoints block and add initialEndpoints.
  ## Type and endpointAddress is required is enabled.
  properties:
    discoveryfinder:
      # Initial Endpoint for edc discovery with type bpn
      initialEndpoints:
        - type: bpn
          endpointAddress: https://portal-backend.int.demo.catena-x.net/api/administration/Connectors/discovery
          description: Service to discover connector endpoints based on bpns
          documentation: https://portal-backend.int.demo.catena-x.net/api/administration/swagger/index.html
          timeToLive: "31536000"
  idp:
    issuerUri: <path:semantics/data/authentication#keycloak-idp>
    publicClientId: <path:semantics/data/authentication#idpClientIdDiscoveryFinder>
  service:
    port: 8080
    type: ClusterIP
  livenessProbe:
    failureThreshold: 3
    periodSeconds: 3
    initialDelaySeconds: 100
  readinessProbe:
    failureThreshold: 3
    periodSeconds: 3
    initialDelaySeconds: 100
  dataSource:
    driverClassName: org.postgresql.Driver
    sqlInitPlatform: pg
    ## The url, user, and password parameter will be ignored if 'enablePostgres' is set to true.
    ## In that case the postgresql auth parameters are used.
    url: jdbc:postgresql://semantic-services-postgresql:5432/discoveryfinder
    user: catenax
    password: <path:semantics/data/authentication#dbpassword>
  ingress:
    enabled: true
    tls: true
    urlPrefix: /discoveryfinder
    className: nginx
    annotations:
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/rewrite-target: /$2
      nginx.ingress.kubernetes.io/use-regex: "true"
      nginx.ingress.kubernetes.io/enable-cors: "true"
      nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
      nginx.ingress.kubernetes.io/x-forwarded-prefix: /discoveryfinder
  resources:
    limits:
      memory: "1024Mi"
    requests:
      memory: "512Mi"

postgresql:
  primary:
    persistence:
      enabled: true
      size: 8Gi
  service:
    ports:
      postgresql: 5432
  auth:
    username: catenax
    password: <path:semantics/data/authentication#dbpassword>
    database: discoveryfinder
